<krpano>
    <!-- <include url="%$sceneurl%/csViewer.xml" /> -->
    <include url="/_ui/responsive/theme-custom/assets/libs/krpano/static/krpano/plugins/webvr.xml" />

    <!-- re-align the vr button and 'auto-start' the video when pressing the enterVR button -->
    <layer name="webvr_enterbutton"
        align="bottom" y="10%"
        />

   <layer name="access_message"
        keep="true"
        style="webvr_button_style"
        html="Please enable gyroscope access"
        align="middle" y="middle"
        alpha="0.0"
        enabled="true"
        width="260"
       />
   <layer name="access_message_ios"
        keep="true"
        style="webvr_button_style"
        html="Please enable gyroscope access[br]Settings => Safari => Motion %26 Orientation Access"
        align="middle" y="middle"
        alpha="0.0"
        enabled="true"
        width="260"
       />

    <!-- show a 'rotate the device' info when the mobile device is in portrait orientation in VR mode -->
    <layer name="webvr_rotate_to_landscape_request" keep="true" vr="true" devices="mobile"
        url="rotate_device.png" scale="0.5"
        align="top" edge="center" y="28%"
        autoalpha="true" alpha="0.0"
        enabled="false"
        />

    <events name="webvr_events" keep="true" devices="html5"
        onresize.mobile="webvr_act_as_gyro_in_portrait_mode();"
        />
    <plugin name="WebVR" devices="html5" keep="true"
        onentervr="webvr_enter();"
        onexitvr="webvr_exit();"
        />

    <action name="webvr_enter">
        webvr_onentervr();
        jsget(gyro, "window.DeviceOrientationAvailbale");
        set(layer[access_message].visible, true);
        set(layer[access_message_ios].visible, true);
        if(device.ios,
            if(gyro, tween(layer[access_message].alpha, 0.0), tween(layer[access_message_ios].alpha, 1.0)),
            if(gyro, tween(layer[access_message].alpha, 0.0), tween(layer[access_message].alpha, 1.0))
        )
    </action>
    <action name="webvr_exit">
        tween(layer[access_message].alpha, 0.0);
        tween(layer[access_message_ios].alpha, 0.0);
        webvr_onexitvr();
    </action>
    <action name="webvr_act_as_gyro_in_portrait_mode">
        if(device.mobile AND webvr.isenabled,
            div(aspect, stagewidth, stageheight);
            if(aspect != lastaspect OR '%1' == 'true',
                copy(lastaspect, aspect);
                if(stagewidth GT stageheight,
                    <!-- landscape orientation - use stereo rendering and a direct/fast gyro sensor mode -->
                    set(display.stereo, true);
                    set(webvr.mobilevr_sensor_mode, 3);
                    webvr.update();
                    tween(layer[webvr_rotate_to_landscape_request].alpha, 0.0, 0.0);
                  ,
                    <!-- portrait orientation - use normal rendering and a smoother/slower gyro sensor mode -->
                    set(display.stereo, false);
                    set(webvr.mobilevr_sensor_mode, 1);
                    webvr.update();
                    tween(layer[webvr_rotate_to_landscape_request].alpha, 1.0);
                    delayedcall(3.0, tween(layer[webvr_rotate_to_landscape_request].alpha, 0.0, 1.0); );
                  );
              );
          ,
            set(lastaspect, 0);
          );
    </action>
</krpano>
